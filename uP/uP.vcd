$date
	Sat Nov 21 10:32:08 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 8 ! program_byte [7:0] $end
$var wire 4 " oprnd [3:0] $end
$var wire 4 # instr [3:0] $end
$var reg 1 $ clk $end
$var reg 1 % en_Fetch $end
$var reg 1 & en_PC $end
$var reg 1 ' loact $end
$var reg 12 ( load [11:0] $end
$var reg 1 ) reset $end
$scope module a $end
$var wire 1 $ clk $end
$var wire 1 % en_Fetch $end
$var wire 1 & en_PC $end
$var wire 1 ' loact $end
$var wire 12 * load [11:0] $end
$var wire 1 ) reset $end
$var wire 8 + program_byte [7:0] $end
$var wire 4 , oprnd [3:0] $end
$var wire 4 - instr [3:0] $end
$var wire 12 . cont [11:0] $end
$scope module a $end
$var wire 1 $ clk $end
$var wire 1 & enable $end
$var wire 1 ' loact $end
$var wire 12 / load [11:0] $end
$var wire 1 ) reset $end
$var reg 12 0 cont [11:0] $end
$upscope $end
$scope module b $end
$var wire 12 1 address [11:0] $end
$var wire 8 2 data [7:0] $end
$upscope $end
$scope module c $end
$var wire 8 3 D8 [7:0] $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var wire 4 4 Q8b [3:0] $end
$var wire 4 5 Q8a [3:0] $end
$scope module a $end
$var wire 4 6 D4 [3:0] $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var wire 4 7 Q4 [3:0] $end
$scope module a $end
$var wire 2 8 D2 [1:0] $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var wire 2 9 Q2 [1:0] $end
$scope module a $end
$var wire 1 : D $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var reg 1 ; Q $end
$upscope $end
$scope module b $end
$var wire 1 < D $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var reg 1 = Q $end
$upscope $end
$upscope $end
$scope module b $end
$var wire 2 > D2 [1:0] $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var wire 2 ? Q2 [1:0] $end
$scope module a $end
$var wire 1 @ D $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var reg 1 A Q $end
$upscope $end
$scope module b $end
$var wire 1 B D $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var reg 1 C Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module b $end
$var wire 4 D D4 [3:0] $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var wire 4 E Q4 [3:0] $end
$scope module a $end
$var wire 2 F D2 [1:0] $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var wire 2 G Q2 [1:0] $end
$scope module a $end
$var wire 1 H D $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var reg 1 I Q $end
$upscope $end
$scope module b $end
$var wire 1 J D $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var reg 1 K Q $end
$upscope $end
$upscope $end
$scope module b $end
$var wire 2 L D2 [1:0] $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var wire 2 M Q2 [1:0] $end
$scope module a $end
$var wire 1 N D $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var reg 1 O Q $end
$upscope $end
$scope module b $end
$var wire 1 P D $end
$var wire 1 % En $end
$var wire 1 $ clk $end
$var wire 1 ) reset $end
$var reg 1 Q Q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xQ
xP
xO
xN
bx M
bx L
xK
xJ
xI
xH
bx G
bx F
bx E
bx D
xC
xB
xA
x@
bx ?
bx >
x=
x<
x;
x:
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
bx (
x'
x&
x%
x$
bx #
bx "
bx !
$end
#1
0;
b0 9
0=
0A
b0 #
b0 -
b0 5
b0 7
b0 ?
0C
0I
b0 G
0K
0O
b0 "
b0 ,
b0 4
b0 E
b0 M
0Q
0:
1<
0@
0B
1H
1J
1N
1P
b1 8
b0 >
b11 F
b11 L
b100 6
b1111 D
b1001111 !
b1001111 +
b1001111 2
b1001111 3
b0 .
b0 0
b0 1
b0 (
b0 *
b0 /
0'
0%
0&
1)
0$
#3
1%
1&
0)
#5
1Q
b11 M
1O
1K
b1111 "
b1111 ,
b1111 4
b1111 E
b11 G
1I
b100 #
b100 -
b100 5
b100 7
b1 9
1=
1:
1B
b11 8
b1 >
b1101 6
b11011111 !
b11011111 +
b11011111 2
b11011111 3
b1 .
b1 0
b1 1
1$
#10
0$
#15
b11 9
1;
b1101 #
b1101 -
b1101 5
b1101 7
b1 ?
1C
0:
0H
0J
0N
b1 8
b0 F
b1 L
b101 6
b1 D
b1010001 !
b1010001 +
b1010001 2
b1010001 3
b10 .
b10 0
b10 1
1$
#20
0$
#22
b10000 (
b10000 *
b10000 /
1'
#25
b1 M
0O
0K
b1 "
b1 ,
b1 4
b1 E
b0 G
0I
b101 #
b101 -
b101 5
b101 7
b1 9
0;
1@
b11 >
b111 6
b1110001 !
b1110001 +
b1110001 2
b1110001 3
b10000 .
b10000 0
b10000 1
1$
#30
0$
#35
b111 #
b111 -
b111 5
b111 7
b11 ?
1A
1$
#39
0'
#40
0$
